# - name: Include crypto generation playbook
#   ansible.builtin.import_playbook: 41_crypto_keys.yml

- hosts: localhost
  vars:
    tmp_path: "/tmp/"
    passphrase: "changeme"
    my_org: "mycompany"
    thisproject: "mycert"
  tasks:

    - name: Generate PKCS12 cert
      community.crypto.openssl_pkcs12:
        action: export
        path: "{{tmp_path}}/{{thisproject}}.p12"
        friendly_name: "{{thisproject}}.{{my_org}}"
        privatekey_path: "{{tmp_path}}/{{thisproject}}.key"
        certificate_path: "{{tmp_path}}/{{thisproject}}.ca.pem"
        passphrase: "{{passphrase}}"
        # implement below if you want to incorporate chain
        # other_certificates: ""
        # other_certificates_parse_all: true
    - name: Clean up any existing jks
      ansible.builtin.file:
        path: "{{item}}"
        state: absent
      loop:
        - "{{tmp_path}}/{{thisproject}}.keystore.jks"
        - "{{tmp_path}}/{{thisproject}}.truststore.jks"

    - name: Import PKCS12 and Generate Keystore
      shell: "keytool -importkeystore \
                -srckeystore {{tmp_path}}/{{thisproject}}.p12 \
                -srcstorepass {{passphrase}} \
                -destkeystore {{tmp_path}}/{{thisproject}}.keystore.jks \
                -deststorepass {{passphrase}} \
                -srcstoretype PKCS12  \
                -deststoretype PKCS12"

    - name: Generate Truststore
      shell: "keytool -import -noprompt  \
                -alias {{thisproject}}-ca \
                -file {{tmp_path}}/{{thisproject}}.ca.pem \
                -keystore {{tmp_path}}/{{thisproject}}.truststore.jks \
                -storepass {{passphrase}} "
    - name: Verify Truststore
      shell: "keytool -list -v  \
                -keystore {{tmp_path}}/{{thisproject}}.truststore.jks \
                -storepass {{passphrase}} "
      register: "verify_store"
    - name: Print verify_store
      debug: 
        var: verify_store.stdout_lines