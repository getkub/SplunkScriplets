---
- name: Check if rule YAML exists
  ansible.builtin.stat:
    path: "{{ rules_dir }}/{{ current_uc_id }}.yml"
  register: rule_file_check

- name: Process rule
  when: rule_file_check.stat.exists
  block:
    - name: Load rule YAML
      ansible.builtin.include_vars:
        file: "{{ rules_dir }}/{{ current_uc_id }}.yml"

    - name: Set rule facts
      ansible.builtin.set_fact:
        rule:
          uid: "{{ uid }}"
          from: "{{ from }}"
          to: "{{ to }}"
          language: "{{ language }}"
          interval: "{{ interval }}"
          rule_query: "{{ rule_query }}"
          actions: "{{ actions | default([]) }}"
          drilldown_queries: "{{ drilldown_queries | default([]) }}"

    - name: Set metadata facts
      ansible.builtin.set_fact:
        meta: "{{ meta_csv_dict[current_uc_id] }}"

    - name: Calculate severity string
      ansible.builtin.set_fact:
        severity_string: >-
          {%- set sev = meta.uc_severity | int -%}
          {%- if sev >= severity_mapping.critical.min -%}
          critical
          {%- elif sev >= severity_mapping.high.min -%}
          high
          {%- elif sev >= severity_mapping.medium.min -%}
          medium
          {%- else -%}
          low
          {%- endif -%}

    - name: Calculate base risk score
      ansible.builtin.set_fact:
        base_risk_score: "{{ (meta.uc_severity | int) * default_priority }}"

    - name: Parse MITRE technique IDs
      ansible.builtin.set_fact:
        technique_ids: "{{ meta.uc_mitre_technique_ids.split(',') | map('trim') | list }}"

    - name: Parse tags
      ansible.builtin.set_fact:
        parsed_tags: "{{ meta.uc_tags.split('|') | list }}"

    - name: Build reference URL
      ansible.builtin.set_fact:
        reference_url: "{{ reference_url_base }}/{{ current_uc_id }}{{ reference_url_suffix }}"

    - name: Generate rule JSON
      ansible.builtin.template:
        src: "{{ templates_dir }}/{{ template_file }}"
        dest: "{{ output_dir }}/{{ current_uc_id }}.json"
        mode: '0644'
      vars:
        uc_id: "{{ current_uc_id }}"