# For Linux
curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 \
  && chmod +x minikube

mylan="192.168.1.1"
myhost="192.168.1.10"
api_port=8001

sudo mkdir -p /usr/local/bin/
sudo install minikube /usr/local/bin/


minikube start --driver=virtualbox


# GUI

## Ensure IP tables are enabled eg for local LAN
sudo iptables -I INPUT -s ${mylan}/24 -p tcp --dport ${api_port} -j ACCEPT
sudo iptables-save >/etc/iptables/rules.v4

## Apply GUI package
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml

# Check settings of context
kubectl config view
# Change If necessary to host which is not blocked
kubectl config set-cluster minikube --server=https://${myhost}:8443

### Start with localLan and how the address needs exposing
# kubectl proxy --accept-hosts='^localhost$,^192\.168\.+\..+$' --address="${myhost}" &
kubectl proxy   # This is just enough if you are port fowarding


### Tokens (will take some time)
https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/creating-sample-user.md
kubectl -n kubernetes-dashboard get secret

kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk '{print $1}')

# In your laptop, port forward and access as localhost
ssh -L 8001:localhost:8001 user@remotehost
http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/#/login
