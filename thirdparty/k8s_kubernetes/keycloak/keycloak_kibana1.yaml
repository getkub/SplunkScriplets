apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: mytest-kibana
  namespace: mytest-elk
spec:
  config:
    xpack.security.audit.enabled: true
    xpack.security.authc:
      selector.enabled: false
      providers:
        oidc.MYTEST-mytest:
          order: 0
          realm: "MYTEST-mytest"
          description: "Login with Keycloak"
          accessAgreement.message: "**mytest**\n\n
                                    This system is for the use of authorised users only in accordance law enforcement officials.\n\n
                                    More license agreement here"
        basic.basic1:
            order: 1
    server.ssl.supportedProtocols: [TLSv1.2,TLSv1.3]
    server.ssl.cipherSuites: [DEFAULT:!SHA1:!SHA256:!SHA384]
    xpack.security.session.idleTimeout: "1h"
    xpack.security.session.lifespan: "8h"
    server.xsrf.whitelist: [/api/security/v1/oidc]
    elasticsearch.ssl.certificateAuthorities: /usr/share/kibana/config/elasticsearch-certs/ca.crt
  version: 7.15.0
  count: 1
  elasticsearchRef:
    name: mytest-elastic
  podTemplate:
    metadata:
      annotations:
        co.elastic.logs/module: kibana
        co.elastic.logs/enabled: "true"
      mytestels:
        scrape: kb
    spec:
      volumes:
        - name: keycloak-crt
          secret:
            secretName: keycloak-crt
      containers:
      - name: kibana
        resources:
          requests:
            memory: 2Gi
            cpu: 2
          limits:
            memory: 2Gi
            cpu: 4
        volumeMounts:
        - name: "keycloak-crt"
          mountPath: "/usr/share/kibana/config/keycloak.crt"
          subPath: "keycloak.crt"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cloud.google.com/gke-nodepool
                operator: In
                values:
                - my-gke-mytest-01
  http:
    service:
      spec:
        type: LoadBalancer
        sessionAffinity: ClientIP
